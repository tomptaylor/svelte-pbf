'use strict'; // code generated by pbf v3.2.1

// Employee ========================================

var Employee = self.Employee = {};

Employee.read = function (pbf, end) {
    return pbf.readFields(Employee._readField, {id: 0, name: "", salary: 0}, end);
};
Employee._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint(true);
    else if (tag === 2) obj.name = pbf.readString();
    else if (tag === 3) obj.salary = pbf.readFloat();
};
Employee.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.name) pbf.writeStringField(2, obj.name);
    if (obj.salary) pbf.writeFloatField(3, obj.salary);
};

// Employees ========================================

var Employees = self.Employees = {};

Employees.read = function (pbf, end) {
    return pbf.readFields(Employees._readField, {employees: []}, end);
};
Employees._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.employees.push(Employee.read(pbf, pbf.readVarint() + pbf.pos));
};
Employees.write = function (obj, pbf) {
    if (obj.employees) for (var i = 0; i < obj.employees.length; i++) pbf.writeMessage(1, Employee.write, obj.employees[i]);
};
